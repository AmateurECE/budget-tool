//! SeaORM Entity. Generated by sea-orm-codegen 0.8.0

use super::sea_orm_active_enums::Transactiontype;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "budget_items")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(column_type = "Text")]
    pub description: String,
    #[sea_orm(column_type = "Text")]
    pub category: String,
    pub budgeted: i64,
    pub transaction_type: Transactiontype,
    #[sea_orm(column_type = "Text", nullable)]
    pub from_account: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub to_account: Option<String>,
    pub periodic_budget: i32,
    pub one_time_budget: Option<i32>,
}

#[derive(Copy, Clone, Debug, EnumIter)]
pub enum Relation {}

impl RelationTrait for Relation {
    fn def(&self) -> RelationDef {
        panic!("No RelationDef")
    }
}

impl ActiveModelBehavior for ActiveModel {}
